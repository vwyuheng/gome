<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	default-autowire="byName">

	<bean id="writeDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/master</value>
		</property>
	</bean>

	<bean id="readDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/slave_1</value>
		</property>
	</bean>


	<bean id="dataSource"
		class="com.tuan.core.common.datasource.MultipleRoutingDataSource">
		<property name="targetDataSources">
			<map>
				<entry key="master" value-ref="writeDataSource" />
				<entry key="slave_1" value-ref="readDataSource" />
			</map>
		</property>
	</bean>

	<bean id="dataSourceLoadbalance"
		class="com.tuan.core.common.datasource.msloadbalancer.MSDataSourcesLoadBalancerManager"
		init-method="init">
		<property name="initDataSourceMap">
			<map>
				<entry key="slave_1" value-ref="readDataSource" />
			</map>
		</property>
		<!-- <property name="detectingSql" value="${dataSourceLoadbalance.detectingSql}"/> -->
		<property name="totalFailureCount" value="${dataSourceLoadbalance.totalFailureCount}" />
		<property name="totalRiseCount" value="${dataSourceLoadbalance.totalRiseCount}" />
		<property name="interTime" value="${dataSourceLoadbalance.interTime}" />

	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>

	<bean id="tuanServiceTemplate" class="com.tuan.core.common.service.TuanServiceTemplateImpl" />

	<bean id="dataSourceSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:/ibatis/mysql-sqlmap.xml</value>
		</property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="baseSqlMapClientDAO" abstract="true">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="sqlMapClient">
			<ref bean="dataSourceSqlMapClient" />
		</property>
	</bean>
	<bean id="daoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<value>performanceInstrument</value>
			</list>
		</property>
		<property name="beanNames">
			<value>*DAO</value>
		</property>
	</bean>
	<bean id="performanceInstrument" class="com.tuan.core.common.aop.pref.PerformanceInstrumentInterceptor" />
	
	
	
</beans>